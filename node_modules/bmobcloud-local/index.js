var __modules = {}

__modules.oData = require("./lib/bmob-cloud-data.js");

__modules.oPush = require("./lib/bmob-cloud-push.js");
__modules.oRelation = require("./lib/bmob-cloud-relation.js");
__modules.oFile = require("./lib/bmob-cloud-file.js");
__modules.oFunctions = require("./lib/bmob-cloud-functions.js");
__modules.oAtom = require("./lib/bmob-cloud-atom.js");
__modules.oBatch = require("./lib/bmob-cloud-batch.js");
__modules.oArray = require("./lib/bmob-cloud-array.js");
__modules.oLocation = require("./lib/bmob-cloud-location.js");

__modules.oAsync = require("./lib/bmob-cloud-async.js");
__modules.oEncodeing = require("./lib/bmob-cloud-encoding.js");
__modules.oEvent = require("./lib/bmob-cloud-event.js");
__modules.oHtmlparser = require("./lib/bmob-cloud-htmlparser.js");
__modules.oHttp = require("./lib/bmob-cloud-http.js");
__modules.oMail = require("./lib/bmob-cloud-mail.js");

// __modules.oHttptype
__modules.oBql = require("./lib/bmob-cloud-bql.js");
__modules.oCrypto = require("./lib/bmob-cloud-crypto.js");
__modules.oXml2js = require("./lib/bmob-cloud-xml2js.js");

var common = require("./bmob-cloud-common.js");
var Bmob = __modules.Bmob = common.Bmob;

var http = require("http");
var util = require("util");

var model = {};

model.initialize = function (app_key, rest_key) {
    Bmob.initialize(app_key, rest_key);
}

var port = 30000;
var testOld = model.testOld = function (onRequest, requestParam, headers, done) {
    var cPort = port++;
    var server = http.createServer(function (req, response) {
            req.setEncoding('utf-8');//设置编码

            var postData = "";
            req.addListener('data', function (postDataStream) {
                postData += postDataStream
            });

            req.addListener('end', function () {
                var method = req.headers.method || req.method || "POST"

                var handler = function () {
                    __modules.oHttptype = method.toLowerCase()
                    onRequest(req, response, __modules);
                }

                switch (method) {
                    case "GET":
                        paserGetData(handler);
                        break;
                    case "POST":
                        //数据接收完毕
                        paserPostData(handler);
                        break;
                    default:
                        throw "Unsupported Requst Method:" + method + " .";
                }

            });

            function paserPostData(handler) {
                if (postData) {
                    var contentType = req.headers["content-type"];
                    if (contentType && contentType.indexOf("text/xml") > -1) {
                        var xml2js = require('xml2js');
                        xml2js.parseString(postData, {explicitArray: false}, function (err, json) {
                            if (err) {
                                throw err;
                            } else {
                                req.body = json;
                                handler();
                            }
                        });
                    } else {
                        req.body = JSON.parse(postData);
                        handler();
                    }
                } else {
                    handler();
                }
            }

            function paserGetData(handler) {
                req.query = require('url').parse(req.url, true).query
                handler();
            }

        }
    ).listen(cPort);

    var request
    if (requestParam && requestParam.method == "GET") {
        var data = requestParam.query
        request = http.get("http://localhost:" + cPort + "/?" + data)
    } else {
        request = http.request({
            'host': 'localhost',
            'port': cPort,
            'path': '/',
            'method': 'POST'
        });

        for (name in headers) {
            request.setHeader(name, headers[name]);
        }
        if (requestParam) {
            if (requestParam.type == "XML") {
                request.write(requestParam.data);
            } else {
                request.write(JSON.stringify(requestParam));
            }
        }
        request.end();
    }

    request.on('error', function (e) {
        console.log('problem with request: ' + e.message);
        server.close();
    });
    request.on('response', function (response) {
        response.on('data', function (data) {
            console.log(util.format('nodejs Response Body\n{ \n"code": %s, \n"msg": \n%s \n}', response.statusCode, data))
            server.close();

            (done || function () {
                console.log("\n--------------------\n");
            }
                )();
        });
    });

}

// just support exports one!!!
model.testWithHeaders = function (file, requestParam, headers, done) {
    var one;
    if (typeof file == "function") {
        one = file;
    } else {
        var group = require(file);
        var name;
        for (one in group) {
            name = one;
        }

//        console.log(group[name].toString());
        one = group[name]
    }

    testOld(one, requestParam, headers, done);
}
model.test = function (file, requestParam, done) {
    model.testWithHeaders(file, requestParam, {}, done);
}

model.testInServer = function (file, requestParam, done) {
    var code = require(file);
    var name;
    for (one in code) {
        name = one;
    }

    if (name) {
        var run = function () {
            __modules.oFunctions.run(
                {"name": name, "data": requestParam || {}},
                function (err, resp) {
                    console.log(resp || err);
                    done && done();
                }
            );
        }

        var pub = require("./pub.js");
        pub(file, run);
    }
}

module.exports = model;
