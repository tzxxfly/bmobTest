//原子操作对象
//很多应用可能会有需要计数器的功能，比如某条信息被点赞多少次等。Bmob提供了非常便捷的方式来保证原子性的修改某一数值字段的值.

var __Request = require("./../bmob-cloud-common").Request;
var assert = require("assert");

module.exports = (function () {
    var model = {};

    /**
     很多应用可能会有需要计数器的功能，比如某条信息被点赞多少次等。Bmob提供了非常便捷的方式来保证原子性的修改某一数值字段的值，示例代码如下：

     function onRequest(request, response, modules) {
     //获取原子操作对象
     var atom = modules.oAtom;

     //score增加一个固定值操作
     atom.exec({
     "table":"GameScore",
     "objectId":"j4w2DDDT",
     "data":{"score":{"__op":"Increment","amount":1}}
     },function(err,data){
     //回调函数
     });
     }
     function onRequest(request, response, modules) {
     //获取原子操作对象
     var atom = modules.oAtom;

     //score减少一个固定值操作
     atom.exec({
     "table":"GameScore",
     "objectId":"j4w2DDDT",
     "data":{"score":{"__op":"Increment","amount":-1}}
     },function(err,data){
     //回调函数
     });
     }
     */
    model.exec = function (request, callback) {
        assert.ifError(request.table == null);
        assert.ifError(request.objectId == null);

        __Request("classes", request.table, request.objectId, 'PUT', request.data, callback);
    }

    return model;
})();